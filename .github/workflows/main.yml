name: Deploy Next.js Application
on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: 'trading-platform-v2' 
  NODE_VERSION: '20.x'
  PORT: '4699'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Build Application
        run: |
          npm ci
          npm run build
          
          APP_NAME_LOWER=$(echo ${{ env.APP_NAME }} | tr '[:upper:]' '[:lower:]')
          DEPLOY_PATH="/www/wwwroot/${APP_NAME_LOWER}.crm-system.com"
          echo "DEPLOY_PATH=${DEPLOY_PATH}" >> $GITHUB_ENV
          
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy Application
        run: |
          # Deploy complete application directory
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.env.local' \
            --exclude='.env.development' \
            --exclude='.user.ini' \
            --exclude='*.log' \
            --exclude='.htaccess' \
            --exclude='.github' \
            ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ env.DEPLOY_PATH }}/
          
          # Execute post-deployment tasks on server
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            cd ${{ env.DEPLOY_PATH }}
            
            # Install production dependencies
            npm ci --production
            
            # Set appropriate file permissions
            find '${{ env.DEPLOY_PATH }}' -name '.user.ini' -prune -o -type f -exec sudo chown www:www {} + 2>/dev/null || true
            find '${{ env.DEPLOY_PATH }}' -name '.user.ini' -prune -o -type d -exec sudo chown www:www {} + 2>/dev/null || true
            find '${{ env.DEPLOY_PATH }}' -name '.user.ini' -prune -o -type f -exec sudo chmod 644 {} + 2>/dev/null || true
            find '${{ env.DEPLOY_PATH }}' -name '.user.ini' -prune -o -type d -exec sudo chmod 755 {} + 2>/dev/null || true
            
            # Create startup script for the daemon
            cat > start-app.sh << 'EOF'
            #!/bin/bash
            cd $(dirname \$0)
              exec npx next start -p ${{ env.PORT }}
            EOF
            chmod +x start-app.sh
          "
          
      - name: Cleanup
        if: always()
        run: rm -rf ~/.ssh
